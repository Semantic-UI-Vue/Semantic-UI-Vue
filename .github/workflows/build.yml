name: Build and Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
          registry-url: https://registry.npmjs.org/
      - name: Setup git
        run: |
          git config --global user.email "mariolamacchia@gmail.com"
          git config --global user.name "Semantic UI Vue CI"
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn module
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Run linter
        run: yarn run lint
      - name: Run unit tests
        run: yarn test
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/clover.xml
          fail_ci_if_error: true
      - name: Build Documentation
        run: yarn run build:docs
        env:
          NODE_ENV: production
      - name: Build library
        run: yarn run build:lib
        env:
          NODE_ENV: production
      - name: Deploy docs
        if: "github.ref == 'refs/heads/master'"
        run: |
          cd dist/docs
          git init
          git remote add origin https://${{ secrets.GH_USER }}:${{ secrets.GH_TOKEN }}@github.com/$REPOSITORY.git
          git add -A
          git commit -m "Generate docs"
          git push -f origin master
        env:
          REPOSITORY: Semantic-UI-Vue/semantic-ui-vue.github.io
      - name: Release version on npm
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Release version on github
        if: "startsWith(github.ref, 'refs/tags/v')"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
